import React, { useEffect, useState } from 'react'
import s from './HouseDetails.module.css'
import { Link } from 'react-router'
import { clsx } from 'clsx'
import { useSelector } from 'react-redux'
import { fetchHouseTC, selectCurrentHouse } from '../model/wizard-world-slice'
import { useAppDispatch } from '@/shared/hooks/useAppDispatch'

export const HouseDetails = () => {
  // üìù –ü–æ–ª—É—á–∏—Ç–µ id —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞ –∏–∑ URL
  const id = ''
  const dispatch = useAppDispatch()
  const currentHouse = useSelector(selectCurrentHouse)
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    if (id) {
      dispatch(fetchHouseTC(id)).finally(() => {
        setLoading(false)
      })
    } else {
      setLoading(false)
    }
  }, [id, dispatch])

  if (loading) {
    return <div className={s.loading}>–ó–∞–≥—Ä—É–∑–∫–∞... ‚è≥</div>
  }

  return (
    <div className={clsx(s.container, 'container')}>
      <Link id="hw16-back" to="/sprint-4" className={s.back}>
        ‚Üê –ù–∞–∑–∞–¥
      </Link>
      {currentHouse ? (
        <div className={s.contentBox} id={`hw16-${currentHouse.name}`}>
          <div className={s.imageColumn}>
            <h3 id={`hw16-currentHouse-title`}>{currentHouse.name}</h3>
            <img src={currentHouse.image} alt={currentHouse.name} className={s.image} />
          </div>
          <div className={s.textColumn}>
            <p>
              <strong>–û—Å–Ω–æ–≤–∞—Ç–µ–ª—å:</strong> {currentHouse.founder}
            </p>
            <p>
              <strong>–¶–≤–µ—Ç–∞:</strong> {currentHouse.houseColours}
            </p>
            <p>
              <strong>–ñ–∏–≤–æ—Ç–Ω–æ–µ:</strong> {currentHouse.animal}
            </p>
            <p>
              <strong>–°—Ç–∏—Ö–∏—è:</strong> {currentHouse.element}
            </p>
            <p>
              <strong>–ü—Ä–∏–≤–∏–¥–µ–Ω–∏–µ:</strong> {currentHouse.ghost}
            </p>
            <p>
              <strong>–û–±—â–∞—è –∫–æ–º–Ω–∞—Ç–∞:</strong> {currentHouse.commonRoom}
            </p>
            <h2>–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–∏</h2>
            <ul>
              {currentHouse.heads.map((head) => (
                <li key={head.id}>
                  {head.firstName} {head.lastName}
                </li>
              ))}
            </ul>
            <h2>–ß–µ—Ä—Ç—ã</h2>
            <ul>
              {currentHouse.traits.map((trait) => (
                <li key={trait.id}>{trait.name}</li>
              ))}
            </ul>
          </div>
        </div>
      ) : (
        <div className={s.error}>–§–∞–∫—É–ª—å—Ç–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω üò¢</div>
      )}
    </div>
  )
}
