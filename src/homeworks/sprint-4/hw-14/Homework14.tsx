import { ChangeEvent, useEffect, useState } from 'react'
import s from './Homework14.module.css'
import { AnimeCard } from '@/homeworks/sprint-4/hw-14/AnimeCard/AnimeCard.tsx'
import { TextField } from '@/homeworks/sprint-2/hw-7/TextField/TextField.tsx'
import { Anime, animeApi } from '@/homeworks/sprint-4/hw-14/anime-fake-api.ts'

/*
 * –í–æ –º–Ω–æ–≥–∏—Ö —Å–ª—É—á–∞—è—Ö —Ö–æ—Ä–æ—à–∏–º —Ä–µ—à–µ–Ω–∏–µ–º –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å state –Ω–µ –≤ useState –∏–ª–∏ Redux, –∞ –≤ URL!
 * –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –¥—Ä—É–≥–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã,
 * –∏–ª–∏ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞.
 *
 * –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –Ω–æ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
 * üìù –í–∞—à–∞ –∑–∞–¥–∞—á–∞ - —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –≤ URL. –ú–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ states, –æ—Ç–≤–µ—á–∞—é—â–∏–µ –∑–∞ —Ñ–∏–ª—å—Ç—Ä—ã.
 * - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ö—É–∫ useSearchParams –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ react-router –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–∏—Å–∫–∞ –≤ URL.
 *
 * üßô‚Äç‚ôÇÔ∏è –ú–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ –ø—Ä–æ useSearchParams –æ—Ç –ò–≥–æ—Ä—è –∏–∑ –ø–ª–µ–π–ª–∏—Å—Ç–∞ "React-router-dom
 *
 * üßô‚Äç‚ôÇÔ∏è –§—É–Ω–∫—Ü–∏—è setSearchParams –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (URLSearchParams) –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤–æ–µ.
 * –ü—Ä–∏–º–µ—Ä:
 * ```
 * setSearchParams((prev) => {
 *   prev.set('queryKey', 'new value') // –¥–æ–±–∞–≤–∏—Ç—å –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –∫ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º –ø–æ–∏—Å–∫–∞
 *   return prev
 * })
 * */

export const Homework14 = () => {
  const [anime, setAnime] = useState<Anime[]>([])
  const [filterTitle, setFilterTitle] = useState('') // –¥–∞–Ω–Ω—ã–π state –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å
  const [isFavorite, setIsFavorite] = useState(false) // –¥–∞–Ω–Ω—ã–π state –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å

  const handleNameChange = (e: ChangeEvent<HTMLInputElement>) => {
    setFilterTitle(e.target.value)
  }

  const handleFavoriteChange = (e: ChangeEvent<HTMLInputElement>) => {
    setIsFavorite(e.target.checked)
  }

  useEffect(() => {
    animeApi
      .getAnime({
        title: filterTitle,
        isFavorite,
      })
      .then((anime) => {
        setAnime(anime)
      })
  }, [isFavorite, filterTitle])

  return (
    <section id="hw14">
      <h3>Homework 14 - Search Params ^_^</h3>
      <div className={s.container}>
        <div className={s.filters}>
          <TextField
            id="hw14-title-input"
            className={s.textField}
            placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é"
            aria-label="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é"
            value={filterTitle}
            onChange={handleNameChange}
          />
          <label>
            <input id="hw14-favorite-checkbox" type="checkbox" checked={isFavorite} onChange={handleFavoriteChange} />
            –¢–æ–ª—å–∫–æ –ª—é–±–∏–º–æ–µ –∞–Ω–∏–º–µ
          </label>
        </div>
        <div className={s.grid}>
          {anime.map((anime) => (
            <AnimeCard key={anime.id} anime={anime} />
          ))}
        </div>
      </div>
    </section>
  )
}
